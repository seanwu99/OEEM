<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>FlexibleColumnLayout</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.

&lt;h3&gt;Overview&lt;/h3&gt;

The control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling
three columns (referred to as &lt;code&gt;Begin&lt;/code&gt;, &lt;code&gt;Mid&lt;/code&gt; and &lt;code&gt;End&lt;/code&gt;) rather than two
(&lt;code&gt;Master&lt;/code&gt;, &lt;code&gt;Detail&lt;/code&gt;). The width of the three columns is variable.

There are several possible layouts that can be changed either with the control's API, or by the user with the help of navigation arrows.

Internally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.

&lt;h3&gt;Usage&lt;/h3&gt;

Use this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).
The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.

The columns are accessible with the &lt;code&gt;beginColumnPages&lt;/code&gt;, &lt;code&gt;midColumnPages&lt;/code&gt; and &lt;code&gt;endColumnPages&lt;/code&gt; aggregations.

The relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.

Changes to the layout due to user interaction are communicated to the app with the &lt;code&gt;stateChange&lt;/code&gt; event.

&lt;ul&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;li&gt;To easily implement the recommended UX design of a &lt;code&gt;sap.f.FlexibleColumnLayout&lt;/code&gt;-based app,
you can use the &lt;code&gt;sap.f.FlexibleColumnLayoutSemanticHelper&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Responsive Behavior&lt;/h3&gt;

The control automatically displays the maximum possible number of columns based on the device size and current &lt;code&gt;layout&lt;/code&gt;.
The app does not need to take into consideration the current device/screen size, but only to add content to the
columns and change the value of the &lt;code&gt;layout&lt;/code&gt; property.

For detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.</documentation>
    <since>1.46</since>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property defaultValue="OneColumn" type="sap.f/LayoutType" name="layout">
            <documentation>Determines the layout of the control - number of visible columns and their relative sizes</documentation>
        </property>
        <property group="Appearance" defaultValue="slide" type="sap.ui.core/string" name="defaultTransitionNameBeginColumn">
            <documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;Begin&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</documentation>
        </property>
        <property group="Appearance" defaultValue="slide" type="sap.ui.core/string" name="defaultTransitionNameMidColumn">
            <documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;Mid&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</documentation>
        </property>
        <property group="Appearance" defaultValue="slide" type="sap.ui.core/string" name="defaultTransitionNameEndColumn">
            <documentation>Determines the type of the transition/animation to apply for the &lt;code&gt;End&lt;/code&gt; column when &lt;code&gt;to()&lt;/code&gt; is called without defining the
transition to use. The default is &lt;code&gt;slide&lt;/code&gt;, other options are &lt;code&gt;fade&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, and the names of any registered custom transitions.</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="stateChange">
            <documentation>Fired when there is a change in the &lt;code&gt;layout&lt;/code&gt; property or in the maximum number of columns that can be displayed at once.
&lt;br/&gt;&lt;/br&gt;
&lt;ul&gt;The interactions that may lead to a state change are:
 &lt;li&gt;the property &lt;code&gt;layout&lt;/code&gt; was changed indirectly by the user clicking a navigation arrow&lt;/li&gt;
 &lt;li&gt;the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.&lt;/li&gt;&lt;/ul&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Note: &lt;/b&gt;The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width</documentation>
            <parameters>
                <parameter type="sap.f/LayoutType" name="layout">
                    <documentation>The value of the &lt;code&gt;layout&lt;/code&gt; property</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="maxColumnsCount">
                    <documentation>The maximum number of columns that can be displayed at once based on the available screen size and control settings.

&lt;ul&gt;Possible values are:
&lt;li&gt;3 for browser size of 1280px or more&lt;/li&gt;
&lt;li&gt;2 for browser size between 960px and 1280px&lt;/li&gt;
&lt;li&gt;1 for browser size less than 960px&lt;/li&gt;&lt;/ul&gt;</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isNavigationArrow">
                    <documentation>Indicates whether the layout changed as a result of the user clicking a navigation arrow</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isResize">
                    <documentation>Indicates whether the maximum number of columns that can be displayed at once changed</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="true" name="beginColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;Begin&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Determines whether the &quot;to&quot; page (more precisely: a control with the ID of the page,
which is currently being navigated to) has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether this is a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this is a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this is a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="afterBeginColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;Begin&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Whether the &quot;to&quot; page (more precisely: a control with the ID of the page, which has been navigated to)
has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether was a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this was a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this was a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="true" name="midColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;Mid&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Determines whether the &quot;to&quot; page (more precisely: a control with the ID of the page,
which is currently being navigated to) has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether this is a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this is a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this is a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="afterMidColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;Mid&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Whether the &quot;to&quot; page (more precisely: a control with the ID of the page, which has been navigated to)
has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether was a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this was a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this was a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="true" name="endColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;End&lt;/code&gt; column has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which was displayed before the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which will be displayed after the current navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Determines whether the &quot;to&quot; page (more precisely: a control with the ID of the page,
which is currently being navigated to) has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether this is a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this is a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this is a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="afterEndColumnNavigate">
            <documentation>Fires when navigation between two pages in the &lt;code&gt;End&lt;/code&gt; column has completed.

NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="from">
                    <documentation>The page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="fromId">
                    <documentation>The ID of the page, which had been displayed before navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="to">
                    <documentation>The page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="toId">
                    <documentation>The ID of the page, which is now displayed after navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="firstTime">
                    <documentation>Whether the &quot;to&quot; page (more precisely: a control with the ID of the page, which has been navigated to)
has not been displayed/navigated to before.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isTo">
                    <documentation>Determines whether was a forward navigation, triggered by to().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBack">
                    <documentation>Determines whether this was a back navigation, triggered by back().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToTop">
                    <documentation>Determines whether this was a navigation to the root page, triggered by backToTop().</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="isBackToPage">
                    <documentation>Determines whether this was a navigation to a specific page, triggered by backToPage().</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="direction">
                    <documentation>Determines how the navigation was triggered, possible values are &quot;to&quot;, &quot;back&quot;, &quot;backToPage&quot;, and &quot;backToTop&quot;.</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <aggregations>
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="beginColumnPages">
            <documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;Begin&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</documentation>
        </aggregation>
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="midColumnPages">
            <documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;Mid&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</documentation>
        </aggregation>
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="endColumnPages">
            <documentation>The content entities between which the &lt;code&gt;FlexibleColumnLayout&lt;/code&gt; navigates in the &lt;code&gt;End&lt;/code&gt; column.

These should be any control with page semantics.
These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.</documentation>
        </aggregation>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/NavContainer" name="_beginColumnNav"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/NavContainer" name="_midColumnNav"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/NavContainer" name="_endColumnNav"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/Button" name="_beginColumnBackArrow"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/Button" name="_midColumnForwardArrow"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/Button" name="_midColumnBackArrow"/>
        <aggregation visibility="hidden" cardinality="0..1" type="sap.m/Button" name="_endColumnForwardArrow"/>
    </aggregations>
    <associations>
        <association cardinality="0..1" type="sap.ui.core/Control" name="initialBeginColumnPage">
            <documentation>Sets the initial &lt;code&gt;Begin&lt;/code&gt; column page, which is displayed on application launch.</documentation>
        </association>
        <association cardinality="0..1" type="sap.ui.core/Control" name="initialMidColumnPage">
            <documentation>Sets the initial &lt;code&gt;Mid&lt;/code&gt; column page, which is displayed on application launch.</documentation>
        </association>
        <association cardinality="0..1" type="sap.ui.core/Control" name="initialEndColumnPage">
            <documentation>Sets the initial &lt;code&gt;End&lt;/code&gt; column page, which is displayed on application launch.</documentation>
        </association>
    </associations>
    <methods>
        <method type="sap.f/FlexibleColumnLayout" name="to">
            <documentation>Navigates to the given page inside the FlexibleColumnLayout.
Columns are scanned for the page in the following order: &lt;code&gt;Begin&lt;/code&gt;, &lt;code&gt;Mid&lt;/code&gt;, &lt;code&gt;End&lt;/code&gt;.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>The screen to which we are navigating to. The ID or the control itself can be given.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="transitionName">
                    <documentation>The type of the transition/animation to apply. This parameter can be omitted; then the default value is &quot;slide&quot; (horizontal movement from the right).</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="data">
                    <documentation>This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameters">
                    <documentation>This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.f/FlexibleColumnLayout" name="backToPage">
            <documentation>Navigates back to a page in the FlexibleColumnLayout.
Columns are scanned for the page in the following order: &lt;code&gt;Begin&lt;/code&gt;, &lt;code&gt;Mid&lt;/code&gt;, &lt;code&gt;End&lt;/code&gt;.

Calling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer,
then the beforeHide pseudo event on the source page, beforeFirstShow (if applicable),
and beforeShow on the target page. Later, after the transition has completed,
the afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left.
The given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data
property. The original &quot;data&quot; object from the &quot;to&quot; navigation is also available in these event objects.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>The screen to which is being navigated to. The ID or the control itself can be given.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="backData">
                    <documentation>This optional object can carry any payload data which should be made available to the target page of the back navigation.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameters">
                    <documentation>This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.f/FlexibleColumnLayout" name="toBeginColumnPage">
            <documentation>Navigates to a given Begin column page.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>The screen to which drilldown should happen. The ID or the control itself can be given.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="transitionName">
                    <documentation>The type of the transition/animation to apply. This parameter can be omitted; then the default value is &quot;slide&quot; (horizontal movement from the right).</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="data">
                    <documentation>This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameters">
                    <documentation>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.f/FlexibleColumnLayout" name="toMidColumnPage">
            <documentation>Navigates to a given Mid column page.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>The screen to which drilldown should happen. The ID or the control itself can be given.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="transitionName">
                    <documentation>The type of the transition/animation to apply. This parameter can be omitted; then the default value is &quot;slide&quot; (horizontal movement from the right).</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="data">
                    <documentation>This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameters">
                    <documentation>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.f/FlexibleColumnLayout" name="toEndColumnPage">
            <documentation>Navigates to a given End column page.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>The screen to which drilldown should happen. The ID or the control itself can be given.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="transitionName">
                    <documentation>The type of the transition/animation to apply. This parameter can be omitted; then the default value is &quot;slide&quot; (horizontal movement from the right).</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="data">
                    <documentation>This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameters">
                    <documentation>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/Control" name="backToTopBeginColumn">
            <documentation>Navigates back to the initial/top level of Begin column (this is the element aggregated as &quot;initialPage&quot;, or the first added element).
NOTE: If already on the initial page, nothing happens.
The transition effect which had been used to get to the current page is inverted and used for this navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/object" name="backData">
                    <documentation>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as &quot;backData&quot; property. (The original data from the &quot;to()&quot; navigation will still be available as &quot;data&quot; property.)</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameter">
                    <documentation>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/Control" name="backToTopMidColumn">
            <documentation>Navigates back to the initial/top level of Mid column (this is the element aggregated as &quot;initialPage&quot;, or the first added element).
NOTE: If already on the initial page, nothing happens.
The transition effect which had been used to get to the current page is inverted and used for this navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/object" name="backData">
                    <documentation>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as &quot;backData&quot; property. (The original data from the &quot;to()&quot; navigation will still be available as &quot;data&quot; property.)</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameter">
                    <documentation>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/Control" name="backToTopEndColumn">
            <documentation>Navigates back to the initial/top level of End column (this is the element aggregated as &quot;initialPage&quot;, or the first added element).
NOTE: If already on the initial page, nothing happens.
The transition effect which had been used to get to the current page is inverted and used for this navigation.</documentation>
            <parameters>
                <parameter type="sap.ui.core/object" name="backData">
                    <documentation>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as &quot;backData&quot; property. (The original data from the &quot;to()&quot; navigation will still be available as &quot;data&quot; property.)</documentation>
                </parameter>
                <parameter type="sap.ui.core/object" name="transitionParameter">
                    <documentation>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/Control" name="getCurrentBeginColumnPage">
            <documentation>Returns the currently displayed Begin column page.</documentation>
        </method>
        <method type="sap.ui.core/Control" name="getCurrentMidColumnPage">
            <documentation>Returns the currently displayed Mid column page.</documentation>
        </method>
        <method type="sap.ui.core/Control" name="getCurrentEndColumnPage">
            <documentation>Returns the currently displayed End column page.</documentation>
        </method>
    </methods>
</control>
