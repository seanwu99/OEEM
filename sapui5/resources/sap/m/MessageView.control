<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>MessageView</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>&lt;strong&gt;&lt;i&gt;Overview&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
A {@link sap.m.MessageView} is used to display a summarized list of different types of messages (errors, warnings, success and information).
It provides a handy and systemized way to navigate and explore details for every message.
It is meant to be embedded into container controls.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Notes:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt; Messages can have descriptions pre-formatted with HTML markup. In this case, the &lt;code&gt;markupDescription&lt;/code&gt; has to be set to &lt;code&gt;true&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt; If the message cannot be fully displayed or includes a long description, the MessageView provides navigation to the detailed description. &lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;i&gt;Structure&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The MessageView stores all messages in an association of type {@link sap.m.MessageItem} named &lt;code&gt;items&lt;/code&gt;.
&lt;br&gt;
A set of properties determines how the items are rendered:
&lt;ul&gt;
&lt;li&gt; counter - An integer that is used to indicate the number of errors for each type &lt;/li&gt;
&lt;li&gt; type - The type of message &lt;/li&gt;
&lt;li&gt; title/subtitle - The title and subtitle of the message&lt;/li&gt;
&lt;li&gt; description - The long text description of the message&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;i&gt;Usage&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
As part of the messaging concept, MessageView provides a way to centrally manage messages and show them to the user without additional work for the developer.
&lt;br&gt;&lt;br&gt;</documentation>
    <since>1.46</since>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property group="Behavior" type="sap.ui.core/any" name="asyncDescriptionHandler">
            <documentation>Callback function for resolving a promise after description has been asynchronously loaded inside this function</documentation>
        </property>
        <property group="Behavior" type="sap.ui.core/any" name="asyncURLHandler">
            <documentation>Callback function for resolving a promise after a link has been asynchronously validated inside this function</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="afterOpen">
            <documentation>This event will be fired after the popover is opened</documentation>
            <parameters>
                <parameter type="sap.ui.core/Control" name="openBy">
                    <documentation>This refers to the control which opens the popover</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="itemSelect">
            <documentation>This event will be fired when description is shown</documentation>
            <parameters>
                <parameter type="sap.m/MessageItem" name="item">
                    <documentation>Refers to the message item that is being presented</documentation>
                </parameter>
                <parameter type="sap.ui.core/MessageType" name="messageTypeFilter">
                    <documentation>Refers to the type of messages being shown
See sap.ui.core.MessageType values for types</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="listSelect">
            <documentation>This event will be fired when one of the lists is shown when (not) filtered  by type</documentation>
            <parameters>
                <parameter type="sap.ui.core/MessageType" name="messageTypeFilter">
                    <documentation>This parameter refers to the type of messages being shown.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="longtextLoaded">
            <documentation>This event will be fired when the long text description data from a remote URL is loaded</documentation>
        </event>
        <event allowPreventDefault="false" name="urlValidated">
            <documentation>This event will be fired when a validation of a URL from long text description is ready</documentation>
        </event>
    </events>
    <aggregations default="items">
        <aggregation cardinality="0..n" type="sap.m/MessageItem" name="items">
            <documentation>A list with message items</documentation>
        </aggregation>
        <aggregation cardinality="0..1" type="sap.m/Button" name="headerButton">
            <documentation>A custom header button</documentation>
        </aggregation>
    </aggregations>
</control>
